{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.module.ts","./src/app/components/app.component.ts","./src/app/components/app.component.html","./src/app/components/empty/empty.component.ts","./src/app/components/empty/empty.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/movie-room/movie-room.component.ts","./src/app/components/movie-room/movie-room.component.html","./src/app/components/movielist/movielist.component.ts","./src/app/components/movielist/movielist.component.html","./src/app/guards/auth.guard.ts","./src/app/services/data-access.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MovielistComponent } from './components/movielist/movielist.component';\nimport { AuthGuard } from './guards/auth.guard';\nimport { EmptyComponent } from './components/empty/empty.component';\n\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: EmptyComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: \"movies\",\n    component: MovielistComponent,\n    canActivate: [AuthGuard]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { LoginComponent } from './components/login/login.component';\nimport { MovielistComponent } from './components/movielist/movielist.component';\nimport { MovieRoomComponent } from './components/movie-room/movie-room.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './components/app.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { SocialLoginModule, AuthServiceConfig, GoogleLoginProvider } from 'angularx-social-login';\nimport { EmptyComponent } from './components/empty/empty.component';\nconst config = new AuthServiceConfig([\n  {\n    id: GoogleLoginProvider.PROVIDER_ID,\n    provider: new GoogleLoginProvider(\"989131655048-3aj5o2omgm1fht1itf1v4j8r6lutnoss.apps.googleusercontent.com\")\n  }\n]);\nexport function provideConfig() {\n  return config;\n}\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    MovielistComponent,\n    MovieRoomComponent,\n    EmptyComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    SocialLoginModule\n  ],\n  providers: [\n    {\n      provide: AuthServiceConfig,\n      useFactory: provideConfig\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AuthService, GoogleLoginProvider, SocialUser } from 'angularx-social-login';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'videostreamer';\n  signinForm: FormGroup;\n  user: SocialUser;\n  loggedIn: boolean;\n  \n  constructor(private formBuilder: FormBuilder, private authService: AuthService, private router: Router) { }\n  \n  ngOnInit() {\n    this.signinForm = this.formBuilder.group({\n      email: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n\n  // signInWithGoogle(): void {\n  //   this.authService.signIn(GoogleLoginProvider.PROVIDER_ID);\n  // }\n  signOut(): void {\n    this.authService.signOut();\n  }\n}","\n\n<!-- <script src=\"https://apis.google.com/js/platform.js\" async defer></script>\n<meta name=\"google-signin-client_id\" content=\"989131655048-3aj5o2omgm1fht1itf1v4j8r6lutnoss.apps.googleusercontent.com\">\n<div class=\"g-signin2\" data-onsuccess=\"onSignIn\"></div> -->\n\n\n<!-- <html lang=\"en\"> -->\n\n<!-- <head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n  <title>Document</title>\n</head> -->\n<!-- \n<body class=\"bg-light\">\n  <div class=\"container\">\n    <div class=\"row py-5 justify-content-center\">\n      <div class=\"col-md-8\">\n        <h1 class=\"text-center py-4\">Sign In in Angular 8</h1>\n        <div *ngIf=\"loggedIn===false\">\n          <form [formGroup]=\"signinForm\">\n            <div class=\"form-group\">\n              <label for=\"email\">Email</label>\n              <input type=\"text\" class=\"form-control\" id=\"email\" formControlName=\"email\">\n            </div>\n\n            <div class=\"form-group\">\n              <label for=\"password\">Password</label>\n              <input type=\"password\" class=\"form-control\" id=\"password\" formControlName=\"password\">\n            </div>\n          </form>\n          <div>\n            <p>Or</p>\n          </div>\n          <div>\n            <button type=\"button\" (click)=\"signInWithGoogle()\" class=\"btn btn-primary\">Sign In With Google</button>\n          </div>\n        </div>\n        <div *ngIf=\"loggedIn===true\">\n          <div class=\"form-group\">\n            <label for=\"firstname\">First Name</label>\n            <input type=\"text\" class=\"form-control\" id=\"firstname\" [value]=\"user.firstName\" readonly>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"lastname\">Last Name</label>\n            <input type=\"text\" class=\"form-control\" id=\"idToken\" [value]=\"user.idToken\" readonly>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"email2\">Email</label>\n            <input type=\"text\" class=\"form-control\" id=\"authToken\" [value]=\"user.authToken\" readonly>\n          </div>\n\n          <button type=\"button\" (click)=\"signOut()\" class=\"btn btn-primary\">Sign Out</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</body> -->\n\n<!-- </html> -->\n<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-empty',\n  templateUrl: './empty.component.html',\n  styleUrls: ['./empty.component.scss']\n})\nexport class EmptyComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n    \n  }\n\n}\n","<movielist></movielist>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>login works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-movie-room',\n  templateUrl: './movie-room.component.html',\n  styleUrls: ['./movie-room.component.scss']\n})\nexport class MovieRoomComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>movie-room works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { DataAccessService } from 'src/app/services/data-access.service';\n\n@Component({\n  selector: 'movielist',\n  templateUrl: './movielist.component.html',\n  styleUrls: ['./movielist.component.scss']\n})\nexport class MovielistComponent implements OnInit {\n\n  constructor(private dataAccessService: DataAccessService) { }\n\n  ngOnInit(): void {\n  }\n}\n","<p>movielist works!</p>\n","import { Injectable, OnInit } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService, SocialUser, GoogleLoginProvider } from 'angularx-social-login';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  user: SocialUser;\n  loggedIn: boolean;\n\n  constructor(private authService: AuthService, private router: Router, private cookieService: CookieService) {\n    this.authService.authState.subscribe((user) => {\n      this.user = user;\n      this.loggedIn = (user != null);\n      console.log(this.user);\n      this.saveToCookie(\"authToken\", this.user.authToken);\n      this.saveToCookie(\"idToken\", this.user.idToken);\n    });\n  }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    let existentCookie = this.cookieService.get(\"authToken\");\n    if (!existentCookie) {\n      this.signInWithGoogle();\n    } else {\n      // this.router.navigate([\"movies\"]);\n      return true;\n    }\n  }\n\n  /**\n   * Checks if the given value is valid, in which case it saves it to cookies under the given name.\n   * @param name name of the cookie\n   * @param value\n   */\n  private saveToCookie(name: string, value: string) {\n    if (!value || value === \"invalid\") {\n      return;\n    }\n\n    let existentCookie = this.cookieService.get(name);\n    if (existentCookie === value) {\n      return;\n    }\n\n    this.cookieService.set(name, value, 1, \"/\");\n  }\n\n  signInWithGoogle(): Promise<void> {\n    return this.authService.signIn(GoogleLoginProvider.PROVIDER_ID).then((user) => {\n      if (user !== null && user.authToken) {\n        this.router.navigateByUrl('/', {skipLocationChange: true}).then(()=>\n        this.router.navigate([\"\"]));\n      }\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataAccessService {\n\n  constructor() { }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}