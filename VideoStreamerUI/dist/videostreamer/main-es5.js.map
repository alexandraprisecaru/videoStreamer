{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.module.ts","webpack:///src/app/components/app.component.ts","webpack:///src/app/components/app.component.html","webpack:///src/app/components/empty/empty.component.ts","webpack:///src/app/components/empty/empty.component.html","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/movie-room/movie-room.component.ts","webpack:///src/app/components/movie-room/movie-room.component.html","webpack:///src/app/components/movielist/movielist.component.ts","webpack:///src/app/components/movielist/movielist.component.html","webpack:///src/app/entities/messageType.ts","webpack:///src/app/entities/messageWrapper.ts","webpack:///src/app/entities/requests/chatMessagesRequest.ts","webpack:///src/app/entities/requests/movieCommentsRequest.ts","webpack:///src/app/entities/requests/movieListRequest.ts","webpack:///src/app/entities/requests/movieRoomPauseRequest.ts","webpack:///src/app/entities/requests/movieRoomPlayRequest.ts","webpack:///src/app/entities/requests/movieRoomRequest.ts","webpack:///src/app/entities/requests/movieRoomSeekRequest.ts","webpack:///src/app/entities/requests/movieRoomWithIdRequest.ts","webpack:///src/app/entities/requests/movieRoomsRequest.ts","webpack:///src/app/entities/requests/saveUserRequest.ts","webpack:///src/app/entities/requests/sendChatMessageRequest.ts","webpack:///src/app/entities/requests/sendMovieCommentRequest.ts","webpack:///src/app/guards/auth.guard.ts","webpack:///src/app/services/appConfig.service.ts","webpack:///src/app/services/websocket.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","canActivate","children","pathMatch","AppRoutingModule","forRoot","imports","config","PROVIDER_ID","provider","provideConfig","AppModule","provide","useFactory","declarations","providers","bootstrap","AppComponent","authService","webSocketService","title","start","stop","signOut","selector","templateUrl","styleUrls","EmptyComponent","LoginComponent","MovieRoomComponent","route","changeDetector","chatMessages","src","room","Movie","Title","autoplay","preload","loop","fullscreen","download","quality","keyboard","muted","overlay","showFrameByFrame","currentTime","seekedByWS","params","subscribe","console","log","authState","user","undefined","roomId","sendMovieRoomWithIdRequest","sendChatMessagesRequest","createMovieRoomResponsesSubscription","createMovieRoomUpdatesSubscription","createMovieRoomPauseUpdatesSubscription","createMovieRoomPlayUpdatesSubscription","createMovieRoomSeekUpdatesSubscription","createChatMessagesReponsesSubscription","createChatMessageUpdatesSubscription","value","chatMessage","Id","RoomId","User","Message","VoiceMessage","DateTime","Date","MovieCurrentTime","push","sendChatMessageRequest","debug","detectChanges","TimeWatched","video","timeChange","getVideoTag","onpause","sendPauseRequest","onplay","sendPlayRequest","onseeked","sendSeekRequest","pause","play","self","movieRoomResponsesObserver","next","processMovieRoom","error","err","complete","subscribeToMovieRoomResponses","movieRoomUpdatesObserver","subscribeToMovieRoomUpdates","subscribeToMovieRoomPauseUpdates","subscribeToMovieRoomPlayUpdates","seek","subscribeToMovieRoomSeekUpdates","chatMessagesResponseObserver","messages","length","setChatMessages","subscribeToChatMessagesReponses","chatMessagesUpdateObserver","message","addChatMessage","subscribeToChatMessageUpdates","matVideo","MovielistComponent","router","movies","movieRooms","createMovieListResponsesSubscription","createMovieListUpdatesSubscription","createMovieRoomsResponsesSubscription","createMovieRoomsUpdatesSubscription","sendMovieListRequest","sendMovieRoomsRequest","movie","sendMovieRoomRequest","movieList","navigate","rooms","movieListResponsesObserver","processMovies","subscribeToMovieListResponses","movieListUpdatesObserver","subscribeToMovieListUpdates","movieRoomsResponsesObserver","processMovieRooms","subscribeToMovieRoomsResponses","movieRoomsUpdatesObserver","subscribeToMovieRoomsUpdates","MessageType","MessageWrapper","messageType","payload","type","JSON","stringify","ChatMessagesRequest","userId","MovieCommentsRequest","movieId","MovieListRequest","MovieRoomPauseRequest","MovieRoomPlayRequest","MovieRoomRequest","MovieRoomSeekRequest","MovieRoomWithIdRequest","MovieRoomsRequest","SaveUserRequest","SendChatMessageRequest","SendMovieCommentRequest","movieComment","AuthGuard","cookieService","loggedIn","sendSaveUserRequest","saveToCookie","authToken","idToken","state","existentCookie","get","signInWithGoogle","name","set","signIn","ux_mode","navigateByUrl","skipLocationChange","providedIn","AppConfigService","WebSocketsService","appConfigService","movieListResponseSubject","movieListUpdateSubject","movieRoomsResponseSubject","movieRoomsUpdateSubject","movieRoomResponseSubject","movieRoomUpdateSubject","movieRoomPauseUpdateSubject","movieRoomPlayUpdateSubject","movieRoomSeekUpdateSubject","chatMessagesReponseSubject","chatMessageUpdateSubject","commentsReponseSubject","commentUpdateSubject","connect","webSocketsServerUrl","webSocket","close","observer","url","WebSocket","onopen","messageEvent","info","onmessage","jsonReceived","data","handleMessage","onerror","onclose","closeEvent","request","SAVE_USER_REQUEST","sendMessage","MOVIE_LIST_REQUEST","MOVIE_ROOMS_REQUEST","MOVIE_ROOM_REQUEST","MOVIE_ROOM_WITH_ID_REQUEST","MOVIE_ROOM_PAUSE_REQUEST","MOVIE_ROOM_PLAY_REQUEST","MOVIE_ROOM_SEEK_REQUEST","CHAT_MESSAGES_REQUEST","SEND_CHAT_MESSAGE_REQUEST","MOVIE_COMMENTS_REQUEST","comment","SEND_MOVIE_COMMENT_REQUEST","socket","reject","maxNumberOfAttempts","intervalTime","currentAttempt","interval","setInterval","clearInterval","readyState","OPEN","waitForOpenConnection","send","messageRecieved","messageWrapper","validateAndGetMessage","MOVIE_LIST_RESPONSE","parse","MOVIE_ROOMS_RESPONSE","MOVIE_ROOMS_UPDATE","roomsUpdated","MOVIE_ROOM_RESPONSE","MOVIE_ROOM_UPDATE","roomUpdated","MOVIE_ROOM_PLAY_UPDATE","roomActionPlay","UserId","Room","MOVIE_ROOM_PAUSE_UPDATE","roomActionPause","MOVIE_ROOM_SEEK_UPDATE","roomActionSeek","CHAT_MESSAGES_RESPONSE","CHAT_MESSAGE_UPDATE","MOVIE_COMMENTS_RESPONSE","comments","MOVIE_COMMENT_UPDATE","messageReceived","hasOwnProperty","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MovielistComponent } from './components/movielist/movielist.component';\nimport { AuthGuard } from './guards/auth.guard';\nimport { EmptyComponent } from './components/empty/empty.component';\nimport { MovieRoomComponent } from './components/movie-room/movie-room.component';\n\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: EmptyComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: \"movies\",\n    children:[\n      {\n        path :\":room-id\",\n        component: MovieRoomComponent,\n        pathMatch:\"full\",\n        canActivate: [AuthGuard]\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { LoginComponent } from './components/login/login.component';\nimport { MovielistComponent } from './components/movielist/movielist.component';\nimport { MovieRoomComponent } from './components/movie-room/movie-room.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './components/app.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { SocialLoginModule, AuthServiceConfig, GoogleLoginProvider } from 'angularx-social-login';\nimport { EmptyComponent } from './components/empty/empty.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatVideoModule } from 'mat-video';\n\nconst config = new AuthServiceConfig([\n  {\n    id: GoogleLoginProvider.PROVIDER_ID,\n    provider: new GoogleLoginProvider(\"989131655048-3aj5o2omgm1fht1itf1v4j8r6lutnoss.apps.googleusercontent.com\")\n  }\n]);\nexport function provideConfig() {\n  return config;\n}\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    MovielistComponent,\n    MovieRoomComponent,\n    EmptyComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    SocialLoginModule,\n    BrowserAnimationsModule,\n    MatVideoModule\n  ],\n  providers: [\n    {\n      provide: AuthServiceConfig,\n      useFactory: provideConfig\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { AuthService, SocialUser } from 'angularx-social-login';\nimport { WebSocketsService } from '../services/websocket.service';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  title = 'videostreamer';\n  signinForm: FormGroup;\n  user: SocialUser;\n  loggedIn: boolean;\n\n  constructor(private authService: AuthService, private webSocketService: WebSocketsService) {\n  }\n\n  ngOnInit() {\n    this.webSocketService.start();\n  }\n\n  ngOnDestroy(): void {\n    this.webSocketService.stop();\n  }\n\n  // signInWithGoogle(): void {\n  //   this.authService.signIn(GoogleLoginProvider.PROVIDER_ID);\n  // }\n  signOut(): void {\n    this.authService.signOut();\n  }\n}","\n\n<!-- <script src=\"https://apis.google.com/js/platform.js\" async defer></script>\n<meta name=\"google-signin-client_id\" content=\"989131655048-3aj5o2omgm1fht1itf1v4j8r6lutnoss.apps.googleusercontent.com\">\n<div class=\"g-signin2\" data-onsuccess=\"onSignIn\"></div> -->\n\n\n<!-- <html lang=\"en\"> -->\n\n<!-- <head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n  <title>Document</title>\n</head> -->\n<!-- \n<body class=\"bg-light\">\n  <div class=\"container\">\n    <div class=\"row py-5 justify-content-center\">\n      <div class=\"col-md-8\">\n        <h1 class=\"text-center py-4\">Sign In in Angular 8</h1>\n        <div *ngIf=\"loggedIn===false\">\n          <form [formGroup]=\"signinForm\">\n            <div class=\"form-group\">\n              <label for=\"email\">Email</label>\n              <input type=\"text\" class=\"form-control\" id=\"email\" formControlName=\"email\">\n            </div>\n\n            <div class=\"form-group\">\n              <label for=\"password\">Password</label>\n              <input type=\"password\" class=\"form-control\" id=\"password\" formControlName=\"password\">\n            </div>\n          </form>\n          <div>\n            <p>Or</p>\n          </div>\n          <div>\n            <button type=\"button\" (click)=\"signInWithGoogle()\" class=\"btn btn-primary\">Sign In With Google</button>\n          </div>\n        </div>\n        <div *ngIf=\"loggedIn===true\">\n          <div class=\"form-group\">\n            <label for=\"firstname\">First Name</label>\n            <input type=\"text\" class=\"form-control\" id=\"firstname\" [value]=\"user.firstName\" readonly>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"lastname\">Last Name</label>\n            <input type=\"text\" class=\"form-control\" id=\"idToken\" [value]=\"user.idToken\" readonly>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"email2\">Email</label>\n            <input type=\"text\" class=\"form-control\" id=\"authToken\" [value]=\"user.authToken\" readonly>\n          </div>\n\n          <button type=\"button\" (click)=\"signOut()\" class=\"btn btn-primary\">Sign Out</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</body> -->\n\n<!-- </html> -->\n<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-empty',\n  templateUrl: './empty.component.html',\n  styleUrls: ['./empty.component.scss']\n})\nexport class EmptyComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n    \n  }\n\n}\n","<movie-list></movie-list>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>login works!</p>\n","import { Component, OnInit, ViewChild, ChangeDetectorRef } from '@angular/core';\nimport { ActivatedRoute } from \"@angular/router\";\nimport { WebSocketsService } from 'src/app/services/websocket.service';\nimport { Observer } from 'rxjs';\nimport { MovieRoom } from 'src/app/entities/movieRoom';\nimport { MatVideoComponent } from 'mat-video/lib/video.component';\nimport { ChatMessage } from 'src/app/entities/chatMessage';\nimport { AuthService, SocialUser } from 'angularx-social-login';\n\n\n@Component({\n  selector: 'app-movie-room',\n  templateUrl: './movie-room.component.html',\n  styleUrls: ['./movie-room.component.scss']\n})\nexport class MovieRoomComponent implements OnInit {\n\n  private video: MatVideoComponent;\n  @ViewChild('video') set matVideo(matVideo: MatVideoComponent) {\n    if (matVideo) { // initially setter gets called with undefined\n      this.video = matVideo;\n    }\n  }\n\n  room: MovieRoom;\n  roomId: string;\n\n  chatMessages: ChatMessage[] = [];\n\n  ngclass: any;\n  src: string = \"http://static.videogular.com/assets/videos/videogular.mp4\";\n  title: string = this.room ? this.room.Movie.Title : \"Not loaded yet\";\n  autoplay: boolean = true;\n  preload: boolean = true;\n  loop: boolean = false;\n  fullscreen: boolean = false;\n  download: boolean = false;\n  quality: boolean = true;\n  keyboard: boolean = true;\n  color: any;\n  spinner: any;\n  poster: any;\n  muted: boolean = true;\n  overlay: boolean = true;\n  showFrameByFrame: boolean = false;\n  currentTime: number = 1;\n\n  seekedByWS: boolean = false;\n\n  user: SocialUser;\n\n  constructor(private route: ActivatedRoute,\n    private changeDetector: ChangeDetectorRef,\n    private webSocketService: WebSocketsService,\n    private authService: AuthService) {\n\n    this.route.params.subscribe(params => {\n      console.log(params);\n\n      this.authService.authState.subscribe(user => {\n        if (user !== null && user !== undefined) {\n          this.user = user;\n\n          this.roomId = params[\"room-id\"];\n          console.log(this.roomId);\n          this.webSocketService.sendMovieRoomWithIdRequest(this.roomId);\n          this.webSocketService.sendChatMessagesRequest(this.roomId);\n        }\n      })\n    });\n  }\n\n  ngOnInit(): void {\n    this.createMovieRoomResponsesSubscription();\n    this.createMovieRoomUpdatesSubscription();\n\n    this.createMovieRoomPauseUpdatesSubscription();\n    this.createMovieRoomPlayUpdatesSubscription();\n    this.createMovieRoomSeekUpdatesSubscription();\n\n    this.createChatMessagesReponsesSubscription();\n    this.createChatMessageUpdatesSubscription();\n  }\n\n  sendMessage(value: string) {\n    let chatMessage: ChatMessage = {\n      Id: \"\",\n      RoomId: this.roomId,\n      User: this.user,\n      Message: value,\n      VoiceMessage: \"voice message cica\",\n      DateTime: new Date(),\n      MovieCurrentTime: this.currentTime // seconds into the movie\n    };\n\n    this.chatMessages.push(chatMessage);\n\n    this.webSocketService.sendChatMessageRequest(this.roomId, chatMessage);\n  }\n\n  private processMovieRoom(room: MovieRoom): void {\n    console.debug('Movie Room received through the observer:\\n%o', room);\n\n    this.room = room;\n    this.title = room.Movie.Title;\n    this.changeDetector.detectChanges();\n\n    this.currentTime = room.TimeWatched;\n\n    this.video.timeChange.subscribe(() => {\n      // send ws request to update timewatched \n    });\n\n    this.video.getVideoTag().onpause = () => {\n      // check if it's on pause already-> don't make request\n      console.log(`on pause called, current time: ${this.video.getVideoTag().currentTime}`);\n\n      // send ws request to pause video for all\n      this.webSocketService.sendPauseRequest(this.roomId, this.video.getVideoTag().currentTime);\n    }\n\n    this.video.getVideoTag().onplay = () => {\n      console.log(`on play called, current time: ${this.video.getVideoTag().currentTime}`);\n\n      // send ws reuqest to play the video\n      this.webSocketService.sendPlayRequest(this.roomId, this.video.getVideoTag().currentTime);\n    }\n\n    this.video.getVideoTag().onseeked = () => {\n      console.log(`on seeked moved called, current time: ${this.video.getVideoTag().currentTime}`);\n      if (!this.seekedByWS) {\n        // send ws request to update the time\n        this.webSocketService.sendSeekRequest(this.roomId, this.video.getVideoTag().currentTime);\n      }\n\n      this.seekedByWS = false;\n    }\n\n    console.log(`title: ${this.video.title}`);\n  }\n\n  private pause(roomId: string, currentTime: number) {\n    if (roomId !== this.roomId) {\n      return;\n    }\n\n    this.changeDetector.detectChanges();\n    this.video.getVideoTag().pause();\n\n    this.currentTime = currentTime;\n  }\n\n  private play(roomId: string, currentTime: number) {\n    if (roomId !== this.roomId) {\n      return;\n    }\n\n    this.changeDetector.detectChanges();\n    this.video.getVideoTag().play();\n\n    this.currentTime = currentTime;\n  }\n\n  private seek(roomId: string, currentTime: number) {\n    if (roomId !== this.roomId) {\n      return;\n    }\n\n    this.changeDetector.detectChanges();\n    this.seekedByWS = true;\n\n    this.video.getVideoTag().currentTime = currentTime;\n\n    this.currentTime = currentTime;\n  }\n\n  private setChatMessages(roomId: string, chatMessages: ChatMessage[]) {\n    if (roomId !== this.roomId) {\n      return;\n    }\n\n    if (!chatMessages) {\n      return;\n    }\n\n    this.chatMessages = chatMessages;\n  }\n\n  private addChatMessage(chatMessage: ChatMessage) {\n    if (!chatMessage) {\n      return;\n    }\n\n    if (chatMessage.RoomId !== this.roomId) {\n      return;\n    }\n\n    this.chatMessages.push(chatMessage);\n  }\n\n  private createMovieRoomResponsesSubscription() {\n    let self = this;\n    const movieRoomResponsesObserver: Observer<MovieRoom> = {\n      next: function (room: MovieRoom): void {\n        self.processMovieRoom(room);\n      },\n\n      error: function (err: any): void {\n        console.error('Error: %o', err);\n      },\n\n      complete: function (): void {\n        console.log('No more movies responses');\n      }\n    };\n\n    this.webSocketService.subscribeToMovieRoomResponses(movieRoomResponsesObserver);\n  }\n\n  private createMovieRoomUpdatesSubscription() {\n    let self = this;\n    const movieRoomUpdatesObserver: Observer<MovieRoom> = {\n      next: function (room: MovieRoom): void {\n        if (room.Id !== self.roomId) {\n          return;\n        }\n\n        self.processMovieRoom(room);\n      },\n\n      error: function (err: any): void {\n        console.error('Error: %o', err);\n      },\n\n      complete: function (): void {\n        console.log('No more movies responses');\n      }\n    };\n\n    this.webSocketService.subscribeToMovieRoomUpdates(movieRoomUpdatesObserver);\n  }\n\n  private createMovieRoomPauseUpdatesSubscription() {\n    let self = this;\n    const movieRoomResponsesObserver: Observer<MovieRoom> = {\n      next: function (room: MovieRoom): void {\n        self.pause(room.Id, room.TimeWatched);\n      },\n\n      error: function (err: any): void {\n        console.error('Error: %o', err);\n      },\n\n      complete: function (): void {\n        console.log('No more movies responses');\n      }\n    };\n\n    this.webSocketService.subscribeToMovieRoomPauseUpdates(movieRoomResponsesObserver);\n  }\n\n  private createMovieRoomPlayUpdatesSubscription() {\n    let self = this;\n    const movieRoomUpdatesObserver: Observer<MovieRoom> = {\n      next: function (room: MovieRoom): void {\n        self.play(room.Id, room.TimeWatched);\n      },\n\n      error: function (err: any): void {\n        console.error('Error: %o', err);\n      },\n\n      complete: function (): void {\n        console.log('No more movies responses');\n      }\n    };\n\n    this.webSocketService.subscribeToMovieRoomPlayUpdates(movieRoomUpdatesObserver);\n  }\n\n  private createMovieRoomSeekUpdatesSubscription() {\n    let self = this;\n    const movieRoomUpdatesObserver: Observer<MovieRoom> = {\n      next: function (room: MovieRoom): void {\n        self.seek(room.Id, room.TimeWatched);\n      },\n\n      error: function (err: any): void {\n        console.error('Error: %o', err);\n      },\n\n      complete: function (): void {\n        console.log('No more movies responses');\n      }\n    };\n\n    this.webSocketService.subscribeToMovieRoomSeekUpdates(movieRoomUpdatesObserver);\n  }\n\n  private createChatMessagesReponsesSubscription() {\n    let self = this;\n    const chatMessagesResponseObserver: Observer<ChatMessage[]> = {\n      next: function (messages: ChatMessage[]): void {\n        if (!messages || messages.length === 0) {\n          return;\n        }\n\n        self.setChatMessages(messages[0].RoomId, messages);\n      },\n\n      error: function (err: any): void {\n        console.error('Error: %o', err);\n      },\n\n      complete: function (): void {\n        console.log('No more chat messages responses');\n      }\n    };\n\n    this.webSocketService.subscribeToChatMessagesReponses(chatMessagesResponseObserver);\n  }\n\n  private createChatMessageUpdatesSubscription() {\n    let self = this;\n    const chatMessagesUpdateObserver: Observer<ChatMessage> = {\n      next: function (message: ChatMessage): void {\n        if (!message) {\n          return;\n        }\n\n        self.addChatMessage(message);\n      },\n\n      error: function (err: any): void {\n        console.error('Error: %o', err);\n      },\n\n      complete: function (): void {\n        console.log('No more chat message updates');\n      }\n    };\n\n    this.webSocketService.subscribeToChatMessageUpdates(chatMessagesUpdateObserver);\n  }\n}\n","<p>movie-room works!</p>\n\n<div *ngIf=\"room!==undefined\">\n  <p>{{room.Users}}</p>\n  <p>{{room.Id}}</p>\n\n  <input #box (keyup.enter)=\"sendMessage(box.value)\">\n\n  <div>\n    <ul>\n      <li *ngFor=\"let message of chatMessages\">\n        <p>{{message.User.name}}</p>\n        <p>{{message.Message}}</p>\n      </li>\n    </ul>\n  </div>\n\n  <div margin=\"100px\">\r\n    <mat-video #video [src]=\"src\" [title]=\"title\" [autoplay]=\"autoplay\" [preload]=\"preload\" [loop]=\"loop\"\r\n               [fullscreen]=\"fullscreen\" [download]=\"download\" [quality]=\"quality\" [keyboard]=\"keyboard\" [color]=\"color\"\r\n               [spinner]=\"spinner\" [poster]=\"poster\" [overlay]=\"overlay\" [(muted)]=\"muted\"\r\n               [showFrameByFrame]=\"showFrameByFrame\" [(time)]=\"currentTime\">\r\n    </mat-video>\r\n  </div>\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\nimport { WebSocketsService } from 'src/app/services/websocket.service';\nimport { Observer } from 'rxjs';\nimport { Movie } from 'src/app/entities/movie';\nimport { Router } from '@angular/router';\nimport { MovieRoom } from 'src/app/entities/movieRoom';\n\n@Component({\n  selector: 'movie-list',\n  templateUrl: './movielist.component.html',\n  styleUrls: ['./movielist.component.scss']\n})\nexport class MovielistComponent implements OnInit {\n\n  movies: Movie[] = [];\n  movieRooms: MovieRoom[] = [];\n  constructor(private webSocketService: WebSocketsService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.createMovieListResponsesSubscription();\n    this.createMovieListUpdatesSubscription();\n\n    this.createMovieRoomsResponsesSubscription();\n    this.createMovieRoomsUpdatesSubscription();\n\n    this.createMovieRoomResponsesSubscription();\n    this.createMovieRoomUpdatesSubscription();\n\n    this.webSocketService.sendMovieListRequest();\n    this.webSocketService.sendMovieRoomsRequest();\n  }\n\n  goToMovie(movie: Movie) {\n    console.log(movie);\n\n    this.webSocketService.sendMovieRoomRequest(movie.Id);\n  }\n\n  private processMovies(movieList: Movie[]): void {\n    console.debug('Movies received through the observer:\\n%o', movieList);\n\n    this.movies = movieList;\n  }\n\n  private processMovieRoom(room: MovieRoom): void {\n    console.debug('Movie Room received through the observer:\\n%o', room);\n\n    this.router.navigate([`movies/${room.Id}`]);\n  }\n\n  private processMovieRooms(rooms: MovieRoom[]): void {\n    console.debug('Movie Rooms received through the observer:\\n%o', rooms);\n\n    this.movieRooms = rooms;\n  }\n\n  private createMovieListResponsesSubscription() {\n    let self = this;\n    const movieListResponsesObserver: Observer<Movie[]> = {\n      next: function (movies: Movie[]): void {\n        self.processMovies(movies);\n      },\n\n      error: function (err: any): void {\n        console.error('Error: %o', err);\n      },\n\n      complete: function (): void {\n        console.log('No more movies responses');\n      }\n    };\n\n    this.webSocketService.subscribeToMovieListResponses(movieListResponsesObserver);\n  }\n\n  private createMovieListUpdatesSubscription() {\n    let self = this;\n    const movieListUpdatesObserver: Observer<Movie[]> = {\n      next: function (movies: Movie[]): void {\n        self.processMovies(movies);\n      },\n\n      error: function (err: any): void {\n        console.error('Error: %o', err);\n      },\n\n      complete: function (): void {\n        console.log('No more movies updates');\n      }\n    };\n\n    this.webSocketService.subscribeToMovieListUpdates(movieListUpdatesObserver);\n  }\n\n  private createMovieRoomsResponsesSubscription() {\n    let self = this;\n    const movieRoomsResponsesObserver: Observer<MovieRoom[]> = {\n      next: function (movieRooms: MovieRoom[]): void {\n        self.processMovieRooms(movieRooms);\n      },\n\n      error: function (err: any): void {\n        console.error('Error: %o', err);\n      },\n\n      complete: function (): void {\n        console.log('No more movies responses');\n      }\n    };\n\n    this.webSocketService.subscribeToMovieRoomsResponses(movieRoomsResponsesObserver);\n  }\n\n  private createMovieRoomsUpdatesSubscription() {\n    let self = this;\n    const movieRoomsUpdatesObserver: Observer<MovieRoom[]> = {\n      next: function (movieRooms: MovieRoom[]): void {\n        self.processMovieRooms(movieRooms);\n      },\n\n      error: function (err: any): void {\n        console.error('Error: %o', err);\n      },\n\n      complete: function (): void {\n        console.log('No more movies updates');\n      }\n    };\n\n    this.webSocketService.subscribeToMovieRoomsUpdates(movieRoomsUpdatesObserver);\n  }\n\n  private createMovieRoomResponsesSubscription() {\n    let self = this;\n    const movieRoomResponsesObserver: Observer<MovieRoom> = {\n      next: function (room: MovieRoom): void {\n        self.processMovieRoom(room);\n      },\n\n      error: function (err: any): void {\n        console.error('Error: %o', err);\n      },\n\n      complete: function (): void {\n        console.log('No more movies responses');\n      }\n    };\n\n    this.webSocketService.subscribeToMovieRoomResponses(movieRoomResponsesObserver);\n  }\n\n  private createMovieRoomUpdatesSubscription() {\n    let self = this;\n    const movieRoomUpdatesObserver: Observer<MovieRoom> = {\n      next: function (room: MovieRoom): void {\n        self.processMovieRoom(room);\n      },\n\n      error: function (err: any): void {\n        console.error('Error: %o', err);\n      },\n\n      complete: function (): void {\n        console.log('No more movies responses');\n      }\n    };\n\n    this.webSocketService.subscribeToMovieRoomUpdates(movieRoomUpdatesObserver);\n  }\n}\n","<p>movielist works!</p>\n<div *ngIf=\"movies.length > 0\" class=\"bold\">\n    <h3>Movies</h3>\n</div>\n<p>Movies count:{{movies.length}}</p>\n<div>\n    <ul>\n        <li *ngFor=\"let movie of movies\">\n            <button (click)=\"goToMovie(movie)\">{{movie.Title}}</button>\n        </li>\n    </ul>\n</div>\n\n<div>\n    <p>Movie rooms count: {{movieRooms.length}}\n    <ul>\n        <li *ngFor=\"let room of movieRooms\">\n            <button>{{room.Id}}</button>\n        </li>\n    </ul>\n</div>","export enum MessageType {\r\n\r\n  SAVE_USER_REQUEST = 'SAVE_USER_REQUEST',\r\n  \r\n  MOVIE_LIST_REQUEST = 'MOVIE_LIST_REQUEST',\r\n  MOVIE_LIST_RESPONSE = 'MOVIE_LIST_RESPONSE',\r\n  MOVIE_LIST_UPDATE = 'MOVIE_LIST_UPDATE',\r\n\r\n  MOVIE_ROOMS_REQUEST = 'MOVIE_ROOMS_REQUEST',\r\n  MOVIE_ROOMS_RESPONSE = 'MOVIE_ROOMS_RESPONSE',\r\n  MOVIE_ROOMS_UPDATE = 'MOVIE_ROOMS_UPDATE',\r\n\r\n  MOVIE_ROOM_REQUEST = 'MOVIE_ROOM_REQUEST',\r\n  MOVIE_ROOM_WITH_ID_REQUEST = 'MOVIE_ROOM_WITH_ID_REQUEST',\r\n  MOVIE_ROOM_RESPONSE = 'MOVIE_ROOM_RESPONSE',\r\n  MOVIE_ROOM_UPDATE = 'MOVIE_ROOM_UPDATE',\r\n\r\n  MOVIE_STREAM_REQUEST = 'MOVIE_STREAM_REQUEST',\r\n  MOVIE_STREAM_RESPONSE = 'MOVIE_STREAM_RESPONSE',\r\n  MOVIE_STREAM_UPDATE = 'MOVIE_STREAM_UPDATE',\r\n  \r\n  MOVIE_CHAT_REQUEST = 'MOVIE_CHAT_REQUEST',\r\n  MOVIE_CHAT_RESPONSE = 'MOVIE_CHAT_RESPONSE',\r\n  MOVIE_CHAT_UPDATE = 'MOVIE_CHAT_UPDATE',\r\n\r\n  SEND_CHAT_MESSAGE_REQUEST = 'SEND_CHAT_MESSAGE_REQUEST',\r\n  CHAT_MESSAGES_REQUEST = 'CHAT_MESSAGES_REQUEST',\r\n  CHAT_MESSAGES_RESPONSE = 'CHAT_MESSAGES_RESPONSE',\r\n  CHAT_MESSAGE_UPDATE = 'CHAT_MESSAGE_UPDATE',\r\n\r\n  SEND_MOVIE_COMMENT_REQUEST = 'SEND_MOVIE_COMMENT_REQUEST',\r\n  MOVIE_COMMENTS_REQUEST = 'MOVIE_COMMENTS_REQUEST',\r\n  MOVIE_COMMENTS_RESPONSE = 'MOVIE_COMMENTS_RESPONSE',\r\n  MOVIE_COMMENT_UPDATE = 'MOVIE_COMMENT_UPDATE',\r\n\r\n  MOVIE_ROOM_PAUSE_REQUEST = 'MOVIE_ROOM_PAUSE_REQUEST',\r\n  MOVIE_ROOM_PAUSE_UPDATE = 'MOVIE_ROOM_PAUSE_UPDATE',\r\n  \r\n  MOVIE_ROOM_PLAY_REQUEST = 'MOVIE_ROOM_PLAY_REQUEST',\r\n  MOVIE_ROOM_PLAY_UPDATE = 'MOVIE_ROOM_PLAY_UPDATE',\r\n  \r\n  MOVIE_ROOM_SEEK_REQUEST = 'MOVIE_ROOM_SEEK_REQUEST',\r\n  MOVIE_ROOM_SEEK_UPDATE = 'MOVIE_ROOM_SEEK_UPDATE',\r\n\r\n  MOVIE_CLOSE_REQUEST = 'MOVIE_CLOSE_REQUEST',\r\n  MOVIE_CLOSE_RESPONSE = 'MOVIE_CLOSE_RESPONSE',\r\n\r\n  // hmm............... idk if personal is needed or doable in the current implementation\r\n  MOVIE_CLOSE_PERSONAL_REQUEST = 'MOVIE_CLOSE_PERSONAL_REQUEST',\r\n  MOVIE_CLOSE_PERSONAL_RESPONSE = 'MOVIE_CLOSE_PERSONAL_RESPONSE'\r\n}\r\n","import { MessageType } from './messageType';\r\nexport class MessageWrapper {\r\n\r\n  readonly type: string;\r\n  readonly payload: string;\r\n\r\n  constructor(messageType: MessageType, payload: Object) {\r\n    this.type = messageType;\r\n    this.payload = JSON.stringify(payload);\r\n  }\r\n}\r\n","export class ChatMessagesRequest {\r\n\r\n  public roomId: string;\r\n  public userId: string;\r\n\r\n  constructor(roomId: string, userId: string) {\r\n    this.roomId = roomId;\r\n    this.userId = userId;\r\n  }\r\n}\r\n","export class MovieCommentsRequest {\r\n\r\n  public movieId: string;\r\n\r\n  constructor(movieId: string) {\r\n    this.movieId = movieId;\r\n  }\r\n}\r\n","export class MovieListRequest {\r\n \r\n  constructor () {\r\n  }\r\n}\r\n","export class MovieRoomPauseRequest {\r\n\r\n  public roomId: string;\r\n  public userId: string;\r\n  public currentTime: number;\r\n\r\n  constructor(roomId: string, userId: string, currentTime: number) {\r\n    this.roomId = roomId;\r\n    this.userId = userId;\r\n    this.currentTime = currentTime;\r\n  }\r\n}\r\n","export class MovieRoomPlayRequest {\r\n\r\n  public roomId: string;\r\n  public userId: string;\r\n  public currentTime: number;\r\n\r\n  constructor(roomId: string, userId: string, currentTime: number) {\r\n    this.roomId = roomId;\r\n    this.userId = userId;\r\n    this.currentTime = currentTime;\r\n  }\r\n}\r\n","export class MovieRoomRequest {\r\n\r\n  public movieId: string;\r\n  public userId: string;\r\n\r\n  constructor(movieId: string, userId: string) {\r\n    this.movieId = movieId;\r\n    this.userId = userId;\r\n  }\r\n}\r\n","export class MovieRoomSeekRequest {\r\n\r\n  public roomId: string;\r\n  public userId: string;\r\n  public currentTime: number;\r\n\r\n  constructor(roomId: string, userId: string, currentTime: number) {\r\n    this.roomId = roomId;\r\n    this.userId = userId;\r\n    this.currentTime = currentTime;\r\n  }\r\n}\r\n","export class MovieRoomWithIdRequest {\r\n\r\n  public roomId: string;\r\n  public userId: string;\r\n\r\n  constructor(roomId: string, userId: string) {\r\n    this.roomId = roomId;\r\n    this.userId = userId;\r\n  }\r\n}\r\n","export class MovieRoomsRequest {\r\n\r\n  public userId: string;\r\n\r\n  constructor(userId: string) {\r\n    this.userId = userId;\r\n  }\r\n}","import { SocialUser } from 'angularx-social-login';\r\n\r\nexport class SaveUserRequest {\r\n  \r\n  public user: SocialUser;\r\n\r\n  constructor(user: SocialUser) {\r\n    this.user = user;\r\n  }\r\n}\r\n","import { ChatMessage } from '../chatMessage';\r\n\r\nexport class SendChatMessageRequest {\r\n\r\n  public roomId: string;\r\n  public userId: string;\r\n  public chatMessage: ChatMessage;\r\n\r\n  constructor(roomId: string, userId: string, chatMessage: ChatMessage) {\r\n    this.roomId = roomId;\r\n    this.userId = userId;\r\n    this.chatMessage = chatMessage;\r\n  }\r\n}\r\n","import { MovieComment } from '../movieComment';\r\n\r\nexport class SendMovieCommentRequest {\r\n\r\n  public movieId: string;\r\n  public movieComment: MovieComment;\r\n\r\n  constructor(movieId: string, movieComment: MovieComment) {\r\n    this.movieId = movieId;\r\n    this.movieComment = movieComment;\r\n  }\r\n}\r\n","import { Injectable, OnInit } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService, SocialUser, GoogleLoginProvider } from 'angularx-social-login';\nimport { CookieService } from 'ngx-cookie-service';\nimport { WebSocketsService } from '../services/websocket.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  user: SocialUser;\n  loggedIn: boolean;\n\n  constructor(\n    private authService: AuthService,\n    private cookieService: CookieService,\n    private webSocketService: WebSocketsService,\n    private router: Router) {\n\n    this.authService.authState.subscribe((user) => {\n      this.user = user;\n      this.loggedIn = (user != null);\n\n      if(this.loggedIn){\n        console.log(this.user);\n\n        webSocketService.sendSaveUserRequest(user);\n\n        this.saveToCookie(\"authToken\", this.user.authToken);\n        this.saveToCookie(\"idToken\", this.user.idToken);\n      }\n    });\n  }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    let existentCookie = this.cookieService.get(\"authToken\");\n    if (!existentCookie) {\n      this.signInWithGoogle();\n    } else {\n      // this.router.navigate([\"movies\"]);\n      return true;\n    }\n  }\n\n  /**\n   * Checks if the given value is valid, in which case it saves it to cookies under the given name.\n   * @param name name of the cookie\n   * @param value\n   */\n  private saveToCookie(name: string, value: string) {\n    if (!value || value === \"invalid\") {\n      return;\n    }\n\n    let existentCookie = this.cookieService.get(name);\n    if (existentCookie === value) {\n      return;\n    }\n\n    this.cookieService.set(name, value, 1, \"/\");\n  }\n\n  signInWithGoogle(): Promise<void> {\n    return this.authService.signIn(GoogleLoginProvider.PROVIDER_ID, { ux_mode: \"redirect\" }).then((user) => {\n      if (user !== null && user.authToken) {\n        this.router.navigateByUrl('/', { skipLocationChange: true }).then(() =>\n          this.router.navigate([\"\"]));\n      }\n    });\n  }\n}\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AppConfigService {\r\n\r\n  private appConfig: any;\r\n\r\n  constructor() { }\r\n\r\n  // public loadAppConfig(): Promise<string | void> {\r\n  //   // return this.httpClient.get('/assets/config.json')\r\n  //   //   .toPromise()\r\n  //   //   .then(data => {\r\n  //   //     this.appConfig = data;\r\n  //   // });\r\n  // }\r\n\r\n  public get webSocketsServerUrl(): string {\r\n    // if (!this.appConfig) {\r\n    //   throw Error('Config file not loaded!');\r\n    // }\r\n\r\n\r\n    // return \"ws://echo.websocket.org\";\r\n    return \"wss://localhost:44343/movies\";\r\n  }\r\n}\r\n","import { Injectable, OnInit } from '@angular/core';\nimport { Observer, Subject } from 'rxjs';\n\nimport { AppConfigService } from './appConfig.service';\nimport { MessageWrapper } from '../entities/messageWrapper';\nimport { MessageType } from '../entities/messageType';\nimport { Movie } from '../entities/movie';\nimport { MovieListRequest } from '../entities/requests/movieListRequest';\nimport { AuthService, SocialUser } from 'angularx-social-login';\nimport { MovieRoomRequest } from '../entities/requests/movieRoomRequest';\nimport { MovieRoom } from '../entities/movieRoom';\nimport { MovieRoomsRequest } from '../entities/requests/movieRoomsRequest';\nimport { SaveUserRequest } from '../entities/requests/saveUserRequest';\nimport { MovieRoomWithIdRequest } from '../entities/requests/movieRoomWithIdRequest';\nimport { MovieRoomPauseRequest } from '../entities/requests/movieRoomPauseRequest';\nimport { MovieRoomPlayRequest } from '../entities/requests/movieRoomPlayRequest';\nimport { MovieRoomSeekRequest } from '../entities/requests/movieRoomSeekRequest';\nimport { MovieRoomAction } from '../entities/movieRoomAction';\nimport { ChatMessage } from '../entities/chatMessage';\nimport { SendChatMessageRequest } from '../entities/requests/sendChatMessageRequest';\nimport { ChatMessagesRequest } from '../entities/requests/chatMessagesRequest';\nimport { MovieComment } from '../entities/movieComment';\nimport { MovieCommentsRequest } from '../entities/requests/movieCommentsRequest';\nimport { SendMovieCommentRequest } from '../entities/requests/sendMovieCommentRequest';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WebSocketsService {\n  private user: SocialUser;\n  private webSocket: WebSocket;\n\n  // Maybe we only need one balance subject\n  private movieListResponseSubject: Subject<Movie[]>;\n  private movieListUpdateSubject: Subject<Movie[]>;\n\n  private movieRoomsResponseSubject: Subject<MovieRoom[]>;\n  private movieRoomsUpdateSubject: Subject<MovieRoom[]>;\n\n  private movieRoomResponseSubject: Subject<MovieRoom>;\n  private movieRoomUpdateSubject: Subject<MovieRoom>;\n\n  private movieRoomPauseUpdateSubject: Subject<MovieRoom>;\n  private movieRoomPlayUpdateSubject: Subject<MovieRoom>;\n  private movieRoomSeekUpdateSubject: Subject<MovieRoom>;\n\n  private chatMessagesReponseSubject: Subject<ChatMessage[]>;\n  private chatMessageUpdateSubject: Subject<ChatMessage>;\n\n  private commentsReponseSubject: Subject<MovieComment[]>;\n  private commentUpdateSubject: Subject<MovieComment>;\n\n  constructor(private appConfigService: AppConfigService, private authService: AuthService) {\n    this.authService.authState.subscribe((user) => {\n      if (user !== null && user !== undefined) {\n        this.user = user;\n        console.log(this.user);\n      }\n    });\n\n    this.movieListResponseSubject = new Subject<Movie[]>();\n    this.movieListUpdateSubject = new Subject<Movie[]>();\n\n    this.movieRoomsResponseSubject = new Subject<MovieRoom[]>();\n    this.movieRoomsUpdateSubject = new Subject<MovieRoom[]>();\n\n    this.movieRoomResponseSubject = new Subject<MovieRoom>();\n    this.movieRoomUpdateSubject = new Subject<MovieRoom>();\n\n    this.movieRoomPauseUpdateSubject = new Subject<MovieRoom>();\n    this.movieRoomPlayUpdateSubject = new Subject<MovieRoom>();\n    this.movieRoomSeekUpdateSubject = new Subject<MovieRoom>();\n\n    this.chatMessagesReponseSubject = new Subject<ChatMessage[]>();\n    this.chatMessageUpdateSubject = new Subject<ChatMessage>();\n\n    this.commentsReponseSubject = new Subject<MovieComment[]>();\n    this.commentUpdateSubject = new Subject<MovieComment>();\n  }\n\n  public start(): void {\n    console.debug('Going to connect to the websockets server');\n    this.connect(this.appConfigService.webSocketsServerUrl);\n  }\n\n  public stop(): void {\n    if (this.webSocket != null) {\n      this.webSocket.close();\n    }\n  }\n\n  public subscribeToMovieListResponses(observer: Observer<Movie[]>): void {\n    this.movieListResponseSubject.subscribe(observer);\n  }\n\n  public subscribeToMovieListUpdates(observer: Observer<Movie[]>): void {\n    this.movieListUpdateSubject.subscribe(observer);\n  }\n\n  public subscribeToMovieRoomsResponses(observer: Observer<MovieRoom[]>): void {\n    this.movieRoomsResponseSubject.subscribe(observer);\n  }\n\n  public subscribeToMovieRoomsUpdates(observer: Observer<MovieRoom[]>): void {\n    this.movieRoomsUpdateSubject.subscribe(observer);\n  }\n\n  public subscribeToMovieRoomResponses(observer: Observer<MovieRoom>): void {\n    this.movieRoomResponseSubject.subscribe(observer);\n  }\n\n  public subscribeToMovieRoomUpdates(observer: Observer<MovieRoom>): void {\n    this.movieRoomUpdateSubject.subscribe(observer);\n  }\n\n  public subscribeToMovieRoomPauseUpdates(observer: Observer<MovieRoom>): void {\n    this.movieRoomPauseUpdateSubject.subscribe(observer);\n  }\n\n  public subscribeToMovieRoomPlayUpdates(observer: Observer<MovieRoom>): void {\n    this.movieRoomPlayUpdateSubject.subscribe(observer);\n  }\n\n  public subscribeToMovieRoomSeekUpdates(observer: Observer<MovieRoom>): void {\n    this.movieRoomSeekUpdateSubject.subscribe(observer);\n  }\n\n  public subscribeToChatMessagesReponses(observer: Observer<ChatMessage[]>): void {\n    this.chatMessagesReponseSubject.subscribe(observer);\n  }\n\n  public subscribeToChatMessageUpdates(observer: Observer<ChatMessage>): void {\n    this.chatMessageUpdateSubject.subscribe(observer);\n  }\n\n  public subscribeToMovieCommentsReponses(observer: Observer<MovieComment[]>): void {\n    this.commentsReponseSubject.subscribe(observer);\n  }\n\n  public subscribeToMovieCommentUpdates(observer: Observer<MovieComment>): void {\n    this.commentUpdateSubject.subscribe(observer);\n  }\n\n  private connect(url: string): void {\n    this.webSocket = new WebSocket(url);\n\n    this.webSocket.onopen = function (messageEvent: MessageEvent) {\n      console.info('WebSocket connection has been opened: %o', messageEvent);\n    };\n\n    // we need the \"self\" constant because we cannot use \"this\" inside the function below\n    const self = this;\n\n    this.webSocket.onmessage = function (messageEvent: MessageEvent) {\n      const jsonReceived: string = messageEvent.data;\n\n      console.debug('WebSocket message received: %s', jsonReceived);\n\n      self.authService.authState.subscribe((user) => {\n        if (user !== undefined && user !== null) {\n          self.user = user;\n          self.handleMessage(jsonReceived);\n        }\n      })\n\n    };;\n\n    this.webSocket.onerror = function (messageEvent: MessageEvent) {\n      console.error('WebSocket error observed: %o', messageEvent);\n    };\n\n    this.webSocket.onclose = function (closeEvent: CloseEvent) {\n      console.info('WebSocket connection has been closed: %o', closeEvent);\n    };\n  }\n\n  public sendSaveUserRequest(user: SocialUser): void {\n    const request: SaveUserRequest = new SaveUserRequest(user);\n    const message: MessageWrapper = new MessageWrapper(MessageType.SAVE_USER_REQUEST, request);\n\n    this.sendMessage(this.webSocket, message);\n  }\n\n  public sendMovieListRequest(): void {\n    const request: MovieListRequest = new MovieListRequest();\n    const message: MessageWrapper = new MessageWrapper(MessageType.MOVIE_LIST_REQUEST, request);\n\n    this.sendMessage(this.webSocket, message);\n  }\n\n  public sendMovieStreamRequest(): void {\n    const request: MovieListRequest = new MovieListRequest();\n    const message: MessageWrapper = new MessageWrapper(MessageType.MOVIE_LIST_REQUEST, request);\n\n    this.sendMessage(this.webSocket, message);\n  }\n\n  public sendMovieRoomsRequest(): void {\n    this.authService.authState.subscribe(user => {\n      const request: MovieRoomsRequest = new MovieRoomsRequest(user.id);\n      const message: MessageWrapper = new MessageWrapper(MessageType.MOVIE_ROOMS_REQUEST, request);\n\n      this.sendMessage(this.webSocket, message);\n    });\n  }\n\n  public sendMovieRoomRequest(movieId: string): void {\n    this.authService.authState.subscribe(user => {\n      const request: MovieRoomRequest = new MovieRoomRequest(movieId, user.id);\n      const message: MessageWrapper = new MessageWrapper(MessageType.MOVIE_ROOM_REQUEST, request);\n\n      this.sendMessage(this.webSocket, message);\n    });\n  }\n\n  public sendMovieRoomWithIdRequest(roomId: string): void {\n    this.authService.authState.subscribe(user => {\n      const request: MovieRoomWithIdRequest = new MovieRoomWithIdRequest(roomId, user.id);\n      const message: MessageWrapper = new MessageWrapper(MessageType.MOVIE_ROOM_WITH_ID_REQUEST, request);\n\n      this.sendMessage(this.webSocket, message);\n    });\n  }\n\n  public sendPauseRequest(roomId: string, currentTime: number): void {\n    this.authService.authState.subscribe(user => {\n      const request: MovieRoomPauseRequest = new MovieRoomPauseRequest(roomId, user.id, currentTime);\n      const message: MessageWrapper = new MessageWrapper(MessageType.MOVIE_ROOM_PAUSE_REQUEST, request);\n\n      this.sendMessage(this.webSocket, message);\n    });\n  }\n\n  public sendPlayRequest(roomId: string, currentTime: number): void {\n    this.authService.authState.subscribe(user => {\n      const request: MovieRoomPlayRequest = new MovieRoomPlayRequest(roomId, user.id, currentTime);\n      const message: MessageWrapper = new MessageWrapper(MessageType.MOVIE_ROOM_PLAY_REQUEST, request);\n\n      this.sendMessage(this.webSocket, message);\n    });\n  }\n\n  public sendSeekRequest(roomId: string, currentTime: number): void {\n    this.authService.authState.subscribe(user => {\n      const request: MovieRoomSeekRequest = new MovieRoomSeekRequest(roomId, user.id, currentTime);\n      const message: MessageWrapper = new MessageWrapper(MessageType.MOVIE_ROOM_SEEK_REQUEST, request);\n\n      this.sendMessage(this.webSocket, message);\n    });\n  }\n\n  public sendChatMessagesRequest(roomId: string): void {\n    this.authService.authState.subscribe(user => {\n      const request: ChatMessagesRequest = new ChatMessagesRequest(roomId, user.id);\n      const message: MessageWrapper = new MessageWrapper(MessageType.CHAT_MESSAGES_REQUEST, request);\n\n      this.sendMessage(this.webSocket, message);\n    });\n  }\n\n  public sendChatMessageRequest(roomId: string, chatMessage: ChatMessage): void {\n    this.authService.authState.subscribe(user => {\n      if (user) {\n        chatMessage.User = user\n        const request: SendChatMessageRequest = new SendChatMessageRequest(roomId, user.id, chatMessage);\n        const message: MessageWrapper = new MessageWrapper(MessageType.SEND_CHAT_MESSAGE_REQUEST, request);\n\n        this.sendMessage(this.webSocket, message);\n      }\n    });\n  }\n\n  public sendMovieCommentsRequest(movieId: string): void {\n    const request: MovieCommentsRequest = new MovieCommentsRequest(movieId);\n    const message: MessageWrapper = new MessageWrapper(MessageType.MOVIE_COMMENTS_REQUEST, request);\n\n    this.sendMessage(this.webSocket, message);\n  }\n\n  public sendMovieCommentRequest(movieId: string, comment: MovieComment): void {\n    this.authService.authState.subscribe(user => {\n      if (user) {\n        const request: SendMovieCommentRequest = new SendMovieCommentRequest(movieId, comment);\n        const message: MessageWrapper = new MessageWrapper(MessageType.SEND_MOVIE_COMMENT_REQUEST, request);\n\n        this.sendMessage(this.webSocket, message);\n      }\n    });\n  }\n\n  private waitForOpenConnection(socket: WebSocket) {\n    return new Promise((resolve, reject) => {\n      const maxNumberOfAttempts = 10\n      const intervalTime = 200 //ms\n\n      let currentAttempt = 0\n      const interval = setInterval(() => {\n        if (currentAttempt > maxNumberOfAttempts - 1) {\n          clearInterval(interval)\n          reject(new Error('Maximum number of attempts exceeded'))\n        } else if (socket.readyState === socket.OPEN) {\n          clearInterval(interval)\n          resolve()\n        }\n        currentAttempt++\n      }, intervalTime)\n    })\n  }\n\n  private async sendMessage(socket: WebSocket, message: MessageWrapper) {\n    if (socket.readyState !== socket.OPEN) {\n      try {\n        await this.waitForOpenConnection(socket);\n      } catch (err) {\n        console.error(err)\n        return;\n      }\n    }\n\n    socket.send(JSON.stringify(message))\n  }\n\n  private handleMessage(messageRecieved: string) {\n    let messageWrapper = this.validateAndGetMessage(messageRecieved);\n\n    switch (messageWrapper.type) {\n      case MessageType.MOVIE_LIST_RESPONSE:\n        let movies: Movie[] = [];\n        try {\n          movies = JSON.parse(messageWrapper.payload);\n        } catch (error) {\n          console.error('Movie list reponse: Unable to deserialize Movie[] object: %s',\n            messageWrapper.payload);\n          return;\n        }\n\n        console.debug('Movies message received: %o', movies);\n        this.movieListResponseSubject.next(movies);\n        break;\n      case MessageType.MOVIE_ROOMS_RESPONSE:\n        let rooms: MovieRoom[];\n        try {\n          rooms = JSON.parse(messageWrapper.payload);\n        } catch (error) {\n          console.error('Room reponse: Unable to deserialize MovieRoom object: %s',\n            messageWrapper.payload);\n          return;\n        }\n\n        console.debug('Room received: %o', rooms);\n        this.movieRoomsResponseSubject.next(rooms);\n        break;\n\n      case MessageType.MOVIE_ROOMS_UPDATE:\n        let roomsUpdated: MovieRoom[];\n        try {\n          roomsUpdated = JSON.parse(messageWrapper.payload);\n        } catch (error) {\n          console.error('Room reponse: Unable to deserialize MovieRoom object: %s',\n            messageWrapper.payload);\n          return;\n        }\n\n        console.debug('Room received: %o', roomsUpdated);\n        this.movieRoomsUpdateSubject.next(roomsUpdated);\n        break;\n\n\n      case MessageType.MOVIE_ROOM_RESPONSE:\n        let room: MovieRoom;\n        try {\n          room = JSON.parse(messageWrapper.payload);\n        } catch (error) {\n          console.error('Room reponse: Unable to deserialize MovieRoom object: %s',\n            messageWrapper.payload);\n          return;\n        }\n\n        console.debug('Room received: %o', room);\n        this.movieRoomResponseSubject.next(room);\n        break;\n\n      case MessageType.MOVIE_ROOM_UPDATE:\n        let roomUpdated: MovieRoom;\n        try {\n          roomUpdated = JSON.parse(messageWrapper.payload);\n        } catch (error) {\n          console.error('Room update: Unable to deserialize MovieRoom object: %s',\n            messageWrapper.payload);\n          return;\n        }\n\n        console.debug('Room received: %o', roomUpdated);\n        this.movieRoomUpdateSubject.next(roomUpdated);\n        break;\n\n      case MessageType.MOVIE_ROOM_PLAY_UPDATE:\n        let roomActionPlay: MovieRoomAction;\n        try {\n          roomActionPlay = JSON.parse(messageWrapper.payload);\n        } catch (error) {\n          console.error('Play video: Unable to deserialize MovieRoomAction object: %s',\n            messageWrapper.payload);\n          return;\n        }\n\n        if (roomActionPlay.UserId === this.user.id) {\n          return;\n        }\n\n        console.debug('Room received: %o', roomActionPlay.Room);\n        this.movieRoomPlayUpdateSubject.next(roomActionPlay.Room);\n        break;\n\n      case MessageType.MOVIE_ROOM_PAUSE_UPDATE:\n        let roomActionPause: MovieRoomAction;\n        try {\n          roomActionPause = JSON.parse(messageWrapper.payload);\n        } catch (error) {\n          console.error('Pause video: Unable to deserialize MovieRoomAction object: %s',\n            messageWrapper.payload);\n          return;\n        }\n\n        if (roomActionPause.UserId === this.user.id) {\n          return;\n        }\n\n        console.debug('Room received: %o', roomActionPause.Room);\n        this.movieRoomPauseUpdateSubject.next(roomActionPause.Room);\n        break;\n\n      case MessageType.MOVIE_ROOM_SEEK_UPDATE:\n        let roomActionSeek: MovieRoomAction;\n        try {\n          roomActionSeek = JSON.parse(messageWrapper.payload);\n        } catch (error) {\n          console.error('Seek video: Unable to deserialize MovieRoomAction object: %s',\n            messageWrapper.payload);\n          return;\n        }\n\n        if (roomActionSeek.UserId === this.user.id) {\n          return;\n        }\n\n        console.debug('Room received: %o', roomActionSeek.Room);\n        this.movieRoomSeekUpdateSubject.next(roomActionSeek.Room);\n        break;\n\n      case MessageType.CHAT_MESSAGES_RESPONSE:\n        let messages: ChatMessage[];\n        try {\n          messages = JSON.parse(messageWrapper.payload);\n        } catch (error) {\n          console.error('Get chat messages response: Unable to deserialize ChatMessage[] object: %s',\n            messageWrapper.payload);\n          return;\n        }\n\n        console.debug('Chat Message received: %o', messages);\n        this.chatMessagesReponseSubject.next(messages);\n        break;\n\n      case MessageType.CHAT_MESSAGE_UPDATE:\n        let message: ChatMessage;\n        try {\n          message = JSON.parse(messageWrapper.payload);\n        } catch (error) {\n          console.error('Get chat message rupdate : Unable to deserialize ChatMessage object: %s',\n            messageWrapper.payload);\n          return;\n        }\n\n        if (message.User.id === this.user.id) {\n          // if the message was sent by the current user, exit\n          return;\n        }\n\n        console.debug('Chat Message received: %o', message);\n        this.chatMessageUpdateSubject.next(message);\n        break;\n\n        case MessageType.MOVIE_COMMENTS_RESPONSE:\n          let comments: MovieComment[];\n          try {\n            comments = JSON.parse(messageWrapper.payload);\n          } catch (error) {\n            console.error('Get movie comments response: Unable to deserialize MovieComment[] object: %s',\n              messageWrapper.payload);\n            return;\n          }\n  \n          console.debug('Movie comments received: %o', comments);\n          this.commentsReponseSubject.next(comments);\n          break;\n  \n        case MessageType.MOVIE_COMMENT_UPDATE:\n          let comment: MovieComment;\n          try {\n            comment = JSON.parse(messageWrapper.payload);\n          } catch (error) {\n            console.error('Get movie comment update : Unable to deserialize MovieComment object: %s',\n              messageWrapper.payload);\n            return;\n          }\n  \n          if (comment.User.id === this.user.id) {\n            // if the message was sent by the current user, exit\n            return;\n          }\n  \n          console.debug('Chat Message received: %o', comment);\n          this.commentUpdateSubject.next(comment);\n          break;\n\n      default: break;\n    }\n  }\n\n  private validateAndGetMessage(messageReceived: string) {\n    let messageWrapper: MessageWrapper;\n    try {\n      messageWrapper = JSON.parse(messageReceived);\n    } catch (error) {\n      console.error('Unable to parse received JSON string: %s\\n%o',\n        messageReceived, error);\n      return;\n    }\n\n    if (!messageWrapper.hasOwnProperty('type') ||\n      !messageWrapper.hasOwnProperty('payload')) {\n      console.error('Invalid message received, not the correct properties: %s',\n        messageReceived);\n      return;\n    }\n\n    return messageWrapper;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}