{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.module.ts","webpack:///src/app/components/app.component.ts","webpack:///src/app/components/app.component.html","webpack:///src/app/components/empty/empty.component.ts","webpack:///src/app/components/empty/empty.component.html","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/movie-room/movie-room.component.ts","webpack:///src/app/components/movie-room/movie-room.component.html","webpack:///src/app/components/movielist/movielist.component.ts","webpack:///src/app/components/movielist/movielist.component.html","webpack:///src/app/guards/auth.guard.ts","webpack:///src/app/services/data-access.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","canActivate","AppRoutingModule","forRoot","imports","config","PROVIDER_ID","provider","provideConfig","AppModule","provide","useFactory","declarations","providers","bootstrap","AppComponent","formBuilder","authService","router","title","signinForm","group","email","required","password","signOut","selector","templateUrl","styleUrls","EmptyComponent","LoginComponent","MovieRoomComponent","MovielistComponent","dataAccessService","AuthGuard","cookieService","authState","subscribe","user","loggedIn","console","log","saveToCookie","authToken","idToken","next","state","existentCookie","get","signInWithGoogle","name","value","set","signIn","navigateByUrl","skipLocationChange","navigate","providedIn","DataAccessService","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MovielistComponent } from './components/movielist/movielist.component';\nimport { AuthGuard } from './guards/auth.guard';\nimport { EmptyComponent } from './components/empty/empty.component';\n\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: EmptyComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: \"movies\",\n    component: MovielistComponent,\n    canActivate: [AuthGuard]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { LoginComponent } from './components/login/login.component';\nimport { MovielistComponent } from './components/movielist/movielist.component';\nimport { MovieRoomComponent } from './components/movie-room/movie-room.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './components/app.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { SocialLoginModule, AuthServiceConfig, GoogleLoginProvider } from 'angularx-social-login';\nimport { EmptyComponent } from './components/empty/empty.component';\nconst config = new AuthServiceConfig([\n  {\n    id: GoogleLoginProvider.PROVIDER_ID,\n    provider: new GoogleLoginProvider(\"989131655048-3aj5o2omgm1fht1itf1v4j8r6lutnoss.apps.googleusercontent.com\")\n  }\n]);\nexport function provideConfig() {\n  return config;\n}\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    MovielistComponent,\n    MovieRoomComponent,\n    EmptyComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    SocialLoginModule\n  ],\n  providers: [\n    {\n      provide: AuthServiceConfig,\n      useFactory: provideConfig\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AuthService, GoogleLoginProvider, SocialUser } from 'angularx-social-login';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'videostreamer';\n  signinForm: FormGroup;\n  user: SocialUser;\n  loggedIn: boolean;\n  \n  constructor(private formBuilder: FormBuilder, private authService: AuthService, private router: Router) { }\n  \n  ngOnInit() {\n    this.signinForm = this.formBuilder.group({\n      email: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n\n  // signInWithGoogle(): void {\n  //   this.authService.signIn(GoogleLoginProvider.PROVIDER_ID);\n  // }\n  signOut(): void {\n    this.authService.signOut();\n  }\n}","\n\n<!-- <script src=\"https://apis.google.com/js/platform.js\" async defer></script>\n<meta name=\"google-signin-client_id\" content=\"989131655048-3aj5o2omgm1fht1itf1v4j8r6lutnoss.apps.googleusercontent.com\">\n<div class=\"g-signin2\" data-onsuccess=\"onSignIn\"></div> -->\n\n\n<!-- <html lang=\"en\"> -->\n\n<!-- <head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n  <title>Document</title>\n</head> -->\n<!-- \n<body class=\"bg-light\">\n  <div class=\"container\">\n    <div class=\"row py-5 justify-content-center\">\n      <div class=\"col-md-8\">\n        <h1 class=\"text-center py-4\">Sign In in Angular 8</h1>\n        <div *ngIf=\"loggedIn===false\">\n          <form [formGroup]=\"signinForm\">\n            <div class=\"form-group\">\n              <label for=\"email\">Email</label>\n              <input type=\"text\" class=\"form-control\" id=\"email\" formControlName=\"email\">\n            </div>\n\n            <div class=\"form-group\">\n              <label for=\"password\">Password</label>\n              <input type=\"password\" class=\"form-control\" id=\"password\" formControlName=\"password\">\n            </div>\n          </form>\n          <div>\n            <p>Or</p>\n          </div>\n          <div>\n            <button type=\"button\" (click)=\"signInWithGoogle()\" class=\"btn btn-primary\">Sign In With Google</button>\n          </div>\n        </div>\n        <div *ngIf=\"loggedIn===true\">\n          <div class=\"form-group\">\n            <label for=\"firstname\">First Name</label>\n            <input type=\"text\" class=\"form-control\" id=\"firstname\" [value]=\"user.firstName\" readonly>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"lastname\">Last Name</label>\n            <input type=\"text\" class=\"form-control\" id=\"idToken\" [value]=\"user.idToken\" readonly>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"email2\">Email</label>\n            <input type=\"text\" class=\"form-control\" id=\"authToken\" [value]=\"user.authToken\" readonly>\n          </div>\n\n          <button type=\"button\" (click)=\"signOut()\" class=\"btn btn-primary\">Sign Out</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</body> -->\n\n<!-- </html> -->\n<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-empty',\n  templateUrl: './empty.component.html',\n  styleUrls: ['./empty.component.scss']\n})\nexport class EmptyComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n    \n  }\n\n}\n","<movielist></movielist>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>login works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-movie-room',\n  templateUrl: './movie-room.component.html',\n  styleUrls: ['./movie-room.component.scss']\n})\nexport class MovieRoomComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>movie-room works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { DataAccessService } from 'src/app/services/data-access.service';\n\n@Component({\n  selector: 'movielist',\n  templateUrl: './movielist.component.html',\n  styleUrls: ['./movielist.component.scss']\n})\nexport class MovielistComponent implements OnInit {\n\n  constructor(private dataAccessService: DataAccessService) { }\n\n  ngOnInit(): void {\n  }\n}\n","<p>movielist works!</p>\n","import { Injectable, OnInit } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService, SocialUser, GoogleLoginProvider } from 'angularx-social-login';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  user: SocialUser;\n  loggedIn: boolean;\n\n  constructor(private authService: AuthService, private router: Router, private cookieService: CookieService) {\n    this.authService.authState.subscribe((user) => {\n      this.user = user;\n      this.loggedIn = (user != null);\n      console.log(this.user);\n      this.saveToCookie(\"authToken\", this.user.authToken);\n      this.saveToCookie(\"idToken\", this.user.idToken);\n    });\n  }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    let existentCookie = this.cookieService.get(\"authToken\");\n    if (!existentCookie) {\n      this.signInWithGoogle();\n    } else {\n      // this.router.navigate([\"movies\"]);\n      return true;\n    }\n  }\n\n  /**\n   * Checks if the given value is valid, in which case it saves it to cookies under the given name.\n   * @param name name of the cookie\n   * @param value\n   */\n  private saveToCookie(name: string, value: string) {\n    if (!value || value === \"invalid\") {\n      return;\n    }\n\n    let existentCookie = this.cookieService.get(name);\n    if (existentCookie === value) {\n      return;\n    }\n\n    this.cookieService.set(name, value, 1, \"/\");\n  }\n\n  signInWithGoogle(): Promise<void> {\n    return this.authService.signIn(GoogleLoginProvider.PROVIDER_ID).then((user) => {\n      if (user !== null && user.authToken) {\n        this.router.navigateByUrl('/', {skipLocationChange: true}).then(()=>\n        this.router.navigate([\"\"]));\n      }\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataAccessService {\n\n  constructor() { }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}